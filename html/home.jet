<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">

    <style>
        .chatbox {
            outline: 1px solid goldenrod;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the home page</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <div class="col-md-6 form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="col-md-6 form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>
                <hr>
                <a href="javascript:void(0);" id="sendBtn" class="btn btn-outline-secondary">Send Message</a>

                <input type="hidden" name="action" id="action">

                <hr>

                <div id="output" class="chatbox">

                </div>
            </div>
            <div class="col-md-4">
                <h3>Who is online</h3>
                <ul id="online_users">

                </ul>
            </div>
        </div>

    </div>

</body>

<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
    crossorigin="anonymous"></script>
<script>
    let socket = null;
    let o = document.getElementById("output")
    let userField = document.getElementById("username")
    let messageField = document.getElementById("message")

    window.onbeforeunload = () => {
        console.log("Leaving")
        let jsonData = {}
        jsonData["action"] = "left"
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new WebSocket("ws://127.0.0.1:8080/ws")

        socket.onopen = () => {
            console.log("Successfully connected")
        }

        socket.onclose = () => {
            console.log("connection closed")
        }

        socket.onerror = error => {
            console.log("there was an error")
        }

        socket.onmessage = msg => {
            //console.log(msg)
            //let j = JSON.parse(msg.data)
            //console.log(j)
            let data = JSON.parse(msg.data)
            console.log("Action is", data.action)

            switch (data.action) {
                case "ListUsers":
                    let ul = document.getElementById("online_users")
                    while (ul.firstChild) ul.removeChild(ul.firstChild)

                    if (data.connectedUsers.length > 0) {
                        data.connectedUsers.forEach(element => {
                            let li = document.createElement("li")
                            li.appendChild((document.createTextNode(element)))
                            ul.appendChild(li)
                        });
                    }
                    break
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>"
                    break
            }

        }

        let userInput = document.getElementById("username")
        userInput.addEventListener("change", function () {
            let jsonData = {}
            jsonData["action"] = "username"
            jsonData["username"] = this.value
            socket.send(JSON.stringify(jsonData))
        })

        const sendMessage = () => {
            let jsonData = {}
            jsonData["action"] = "broadcast"
            jsonData["username"] = document.getElementById("username").value
            jsonData["message"] = document.getElementById("message").value
            socket.send(JSON.stringify(jsonData))
            document.getElementById("message").value = ""
        }

        document.getElementById("message").addEventListener("keydown", function (event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("no connection")
                    return false
                }
                if ((userField.value === "") || (messageField.value == "")) {
                    alert("fill out user and message")
                    return false
                } else {
                    sendMessage()
                }

                event.preventDefault()
                event.stopPropagation()
                sendMessage()
            }
        })

        document.getElementById("sendBtn").addEventListener("click", () => {
            if ((userField.value === "") || (messageField.value == "")) {
                alert("fill out user and message")
                return false
            } else {
                sendMessage()
            }
        })

    })
</script>

</html>